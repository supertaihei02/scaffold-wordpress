{% macro input(element, classes, attributes) %}
  {% import _self as builder %}

  {% if classes is empty %}
    {% set classes = [] %}
  {% endif %}
  {% if attributes is empty %}
    {% set attributes = [] %}
  {% endif %}

  {# DefaultのTwigには Swich構文がないらしい #}
  {% if element.input_type == constant('SI_FIELD_TYPE_TEXT') %}
    {{ builder.text(element, classes, attributes) }}
  {% elseif element.input_type == constant('SI_FIELD_TYPE_TEXTAREA') %}
    {{ builder.textarea(element, classes, attributes) }}
  {% elseif element.input_type == constant('SI_FIELD_TYPE_CHECKBOX') %}
    {{ builder.checkbox(element, classes, attributes) }}
  {% elseif element.input_type == constant('SI_FIELD_TYPE_HIDDEN') %}
    {{ builder.hidden(element, classes, attributes) }}
  {% elseif element.input_type == constant('SI_FIELD_TYPE_FILE') %}
    {{ builder.file(element, classes, attributes) }}
  {% elseif element.input_type == constant('SI_FIELD_TYPE_RADIO') %}
    {{ builder.radio(element, classes, attributes) }}
  {% elseif element.input_type == constant('SI_FIELD_TYPE_SELECT') %}
    {{ builder.select(element, classes, attributes) }}
  {% elseif element.input_type == constant('SI_FIELD_TYPE_NUMBER') %}
    {{ builder.number(element, classes, attributes) }}
  {% elseif element.input_type == constant('SI_FIELD_TYPE_DATE') %}
    {{ builder.date(element, classes, attributes) }}
  {% elseif element.input_type == constant('SI_FIELD_TYPE_TIME') %}
    {{ builder.time(element, classes, attributes) }}
  {% elseif element.input_type == constant('SI_FIELD_TYPE_BUTTON') %}
    {{ builder.button(element, classes, attributes) }}
  {% elseif element.input_type == constant('SI_FIELD_TYPE_LINK_BUTTON') %}
    {{ builder.linkButton(element, classes, attributes) }}
  {% endif %}
{% endmacro input %}

{# ####################################
 #               text
 #################################### #}
{% macro text(element, classes, attributes) %}
  <input {{ easyAttrs(element, classes|merge([]), attributes|merge({
    'type': element.input_type,
    'value': element.value
  }))|raw }}>
{% endmacro text %}

{# ####################################
 #             textarea
 #################################### #}
{% macro textarea(element, classes, attributes) %}
  <textarea {{ easyAttrs(element, classes|merge([]), attributes|merge([]))|raw }}>{{ element.value }}</textarea>
{% endmacro textarea %}

{# ####################################
 #             checkbox
 #################################### #}
{% macro checkbox(element, classes, attributes) %}
  {# 値がないケースのためにhiddenを仕込む #}
  <input {{ easyAttrs(element, classes|merge([]), attributes|merge({
    'type': 'hidden',
    'value': 'none'
  }), ['id'])|raw }}>
  {# 要素分Checkbox作成 #}
  {% for choice_value in element.choice_values %}
    <input {{ choice_value.selected }} name="{{ element.name }}[]" {{
    easyAttrs(element, classes|merge([]), attributes|merge({
      'type': element.input_type,
      'value': choice_value.key
    }), ['id', 'name'])|raw }}>{{ choice_value.name }}
  {% endfor %}
{% endmacro checkbox %}

{# ####################################
 #             hidden
 #################################### #}
{% macro hidden(element, classes, attributes) %}
  <input {{ easyAttrs(element, classes|merge([]), attributes|merge({
    'type': element.input_type,
    'value': element.value
  }))|raw }}>
{% endmacro hidden %}

{# ####################################
 #             file
 #################################### #}
{% macro file(element, classes, attributes) %}
  <div id="{{ element.id }}">
    {% if element.value is not empty %}
      {% if isImage(element.value) %}
        <img {{ easyAttrs(element, classes|merge([]), attributes|merge([]), ['id', 'name'])|raw }} src="{{ element.value }}" alt="選択中の画像">
      {% else %}
        <p> {{ easyAttrs(element, classes|merge([]), attributes|merge([]), ['id', 'name'])|raw }} {{ basename(element.value) }}</p>
      {% endif %}
    {% endif %}
    {% if isAdmin() %}
      <input {{ easyAttrs(element, classes|merge([]), attributes|merge({
        'type': 'hidden',
        'value': element.value
      }), ['id'])|raw }}>
      <a href="javascript:void(0);" data-url-input="{{ element.id }}" id="{{ element.id }}-img"
         class="button upload-btn">ファイル選択</a>
      <a href="javascript:void(0);" data-url-input="{{ element.id }}" class="upload-clear-btn">削除</a>
    {% else %}
      <p><b>未実装。async-upload.php を利用して実装したい。<br>けどログインしていないUserで可能なのか？</b></p>
      <input {{ easyAttrs(element, classes|merge([]), attributes|merge({
        'type': element.input_type,
        'value': element.value
      }), ['id'])|raw  }}>
      <input type="file" name="async-upload" class="image-file" accept="image/*" required>
      <input type="hidden" name="image_id">
      <input type="hidden" name="action" value="image_submission">
    {% endif %}
  </div>
{% endmacro file %}

{# ####################################
 #             radio
 #################################### #}
{% macro radio(element, classes, attributes) %}
  {% for choice_value in element.choice_values %}
    <input {{ choice_value.selected }} {{ easyAttrs(element, classes|merge([]), attributes|merge({
      'type': element.input_type,
      'value': choice_value.key
    }), ['id'])|raw }}>{{ choice_value.name }}
  {% endfor %}
{% endmacro radio %}

{# ####################################
 #             select
 #################################### #}
{% macro select(element, classes, attributes) %}
  <select {{ easyAttrs(element, classes|merge([]), attributes|merge([]))|raw }}">
    {% for choice_value in element.choice_values %}
      <option {{ easyAttrs(element, classes|merge([]), attributes|merge({
        'value': choice_value.key
      }), ['id', 'name', 'class'])|raw }}>{{ choice_value.name }}</option>
    {% endfor %}
  </select>
{% endmacro select %}

{# ####################################
 #             number
 #################################### #}
{% macro number(element, classes, attributes) %}
  <input {{ easyAttrs(element, classes|merge([]), attributes|merge({
    'type': element.input_type,
    'value': element.value
  }))|raw }}>
{% endmacro number %}

{# ####################################
 #             date
 #################################### #}
{% macro date(element, classes, attributes) %}
  <input {{ easyAttrs(element, classes|merge([]), attributes|merge({
    'type': element.input_type,
    'value': element.value
  }))|raw }}>
{% endmacro date %}

{# ####################################
 #             time
 #################################### #}
{% macro time(element, classes, attributes) %}
  <input {{ easyAttrs(element, classes|merge([]), attributes|merge({
    'type': element.input_type,
    'value': element.value
  }))|raw }}>
{% endmacro time %}

{# ####################################
 #             button
 #################################### #}
{% macro button(element, classes, attributes) %}
  <button {{ easyAttrs(element, classes|merge([]), attributes|merge({
    'type': element.input_type,
    'value': element.value
  }), ['name'])|raw }}>{{ element.layer_name }}</button>
{% endmacro button %}

{# ####################################
 #           link button
 #################################### #}
{% macro linkButton(element, classes, attributes) %}
  <button {{ easyAttrs(element, classes|merge([]), attributes|merge({
    'type': 'button',
    'value': element.value
  }), ['name'])|raw }}
      {% set link_url = null %}
      {% if keyExists(constant('SI_LINK_BUTTON_EXTRA_LINK_ELEMENT_VALUE'), element.extras) %}
        {% set link_url = element.value %}
      {% elseif keyExists(constant('SI_LINK_BUTTON_EXTRA_LINK_OPTION'), element.extras) %}
        {% set link_url = getOption(element.value) %}
      {% elseif keyExists(constant('SI_LINK_BUTTON_EXTRA_LINK_OPTION_BY_OTHER_ELEMENT'), element.extras) %}
        {% set link_url = getOption(element.attributes[element.extras[constant('SI_LINK_BUTTON_EXTRA_LINK_OPTION_BY_OTHER_ELEMENT')]]) %}
      {% endif %}
      {% if link_url is not empty %}
        onclick="javascript:window.open('{{ link_url }}', '_blank');"
      {% else %}
        onclick="javascript:alert('リンク先が無効です');"
      {% endif %}
  >{{ element.layer_name }}</button>
{% endmacro linkButton %}
